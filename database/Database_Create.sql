CREATE TABLE USERS (
    STUDENT_NUMBER VARCHAR(20) PRIMARY KEY,
    STUDENT_FNAME VARCHAR(50),
    STUDENT_LNAME VARCHAR(50),
    STUDENT_CONTACT_NO VARCHAR(15) UNIQUE,
    STUDENT_EMAIL VARCHAR(100) UNIQUE NOT NULL,
    USER_ROLE ENUM('STUDENT', 'ADMIN') DEFAULT 'STUDENT'
);

CREATE TABLE AUTHENTICATION (
    STUDENT_NUMBER VARCHAR(20) PRIMARY KEY,
    PASSWORD_HASH VARCHAR(255) NOT NULL,
    VERIFICATION_TOKEN VARCHAR(255) NOT NULL,
    VERIFIED TINYINT NOT NULL DEFAULT 0,
    FOREIGN KEY (STUDENT_NUMBER) REFERENCES USERS(STUDENT_NUMBER)
);

CREATE TABLE POSTS (
    POST_ID INT PRIMARY KEY AUTO_INCREMENT,
    STUDENT_NUMBER VARCHAR(20) NOT NULL,
    TITLE VARCHAR(255) NOT NULL,
    POST_QUESTION TEXT NOT NULL,
    POST_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    VOTE_COUNT INT DEFAULT 0,
    STATUS TINYINT NOT NULL DEFAULT 1, -- 1 = ACTIVE, 0 = DELETED
    FOREIGN KEY (STUDENT_NUMBER) REFERENCES USERS(STUDENT_NUMBER)
);

CREATE TABLE COMMENTS (
    COMMENT_ID INT PRIMARY KEY AUTO_INCREMENT,
    POST_ID INT NOT NULL,
    STUDENT_NUMBER VARCHAR(20) NOT NULL,
    STUDENT_COMMENT TEXT NOT NULL,
    COMMENT_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    VOTE_COUNT INT DEFAULT 0,
    STATUS TINYINT NOT NULL DEFAULT 1, -- 1 = ACTIVE, 0 = DELETED
    FOREIGN KEY (POST_ID) REFERENCES POSTS(POST_ID),
    FOREIGN KEY (STUDENT_NUMBER) REFERENCES USERS(STUDENT_NUMBER)
);

CREATE TABLE VOTES (
    VOTE_ID INT PRIMARY KEY AUTO_INCREMENT,
    STUDENT_NUMBER VARCHAR(20) NOT NULL,
    POST_ID INT,
    COMMENT_ID INT,
    VOTE_TYPE TINYINT NOT NULL DEFAULT 0 -- 1 = UPVOTE, 0 = NOVOTE
    VOTED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT UNIQUE_POST_VOTE UNIQUE (STUDENT_NUMBER, POST_ID),
    CONSTRAINT UNIQUE_COMMENT_VOTE UNIQUE (STUDENT_NUMBER, COMMENT_ID),
    FOREIGN KEY (STUDENT_NUMBER) REFERENCES USERS(STUDENT_NUMBER),
    FOREIGN KEY (POST_ID) REFERENCES POSTS(POST_ID),
    FOREIGN KEY (COMMENT_ID) REFERENCES COMMENTS(COMMENT_ID)
);